{
    "name": "TicketingApp",
    "structs": {},
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "createEvent",
            "args": [
                {
                    "type": "string",
                    "name": "title",
                    "desc": "Event title"
                },
                {
                    "type": "string",
                    "name": "subtitle",
                    "desc": "Event subtitle"
                },
                {
                    "type": "string",
                    "name": "description",
                    "desc": "Event description"
                },
                {
                    "type": "uint64",
                    "name": "start_date",
                    "desc": "Unix timestamp of event start"
                },
                {
                    "type": "uint64",
                    "name": "end_date",
                    "desc": "Unix timestamp of event end"
                },
                {
                    "type": "string",
                    "name": "timezone",
                    "desc": "Event timezone"
                },
                {
                    "type": "string",
                    "name": "location_type",
                    "desc": "Type of event (in-person, virtual, hybrid)"
                },
                {
                    "type": "string",
                    "name": "venue",
                    "desc": "Venue name (if applicable)"
                },
                {
                    "type": "string",
                    "name": "city",
                    "desc": "City name"
                },
                {
                    "type": "string",
                    "name": "country",
                    "desc": "Country name"
                },
                {
                    "type": "string",
                    "name": "website",
                    "desc": "Event website URL"
                },
                {
                    "type": "string",
                    "name": "ticket_name",
                    "desc": "Name of the ticket type"
                },
                {
                    "type": "uint64",
                    "name": "ticket_supply",
                    "desc": "Total number of tickets to mint"
                },
                {
                    "type": "uint64",
                    "name": "price",
                    "desc": "Price per ticket in microALGOs"
                },
                {
                    "type": "string",
                    "name": "currency",
                    "desc": "Currency type (ALGO/USDC)"
                },
                {
                    "type": "uint64",
                    "name": "per_wallet_limit",
                    "desc": "Maximum tickets per wallet"
                },
                {
                    "type": "uint64",
                    "name": "resale_allowed",
                    "desc": "Whether resale is allowed (0/1)"
                },
                {
                    "type": "address",
                    "name": "treasury_address",
                    "desc": "Address to receive ticket revenue"
                },
                {
                    "type": "address",
                    "name": "issuer_address",
                    "desc": "Address that manages the event"
                },
                {
                    "type": "string",
                    "name": "asa_unit_name",
                    "desc": "Unit name for the ASA"
                },
                {
                    "type": "string",
                    "name": "asa_asset_name",
                    "desc": "Asset name for the ASA"
                },
                {
                    "type": "uint64",
                    "name": "royalty_bps",
                    "desc": "Royalty in basis points"
                },
                {
                    "type": "string",
                    "name": "vc_issuer_did",
                    "desc": "DID for VC issuer"
                },
                {
                    "type": "string",
                    "name": "vc_schema_url",
                    "desc": "URL for VC schema"
                },
                {
                    "type": "uint64",
                    "name": "enable_qr",
                    "desc": "Whether QR check-in is enabled (0/1)"
                },
                {
                    "type": "uint64",
                    "name": "data_minimised",
                    "desc": "Whether to use data minimization (0/1)"
                }
            ],
            "returns": {
                "type": "uint64",
                "desc": "The created event ASA ID"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Create a new event by minting an ASA and storing event data in global state.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        22
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        55
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        68,
                        108,
                        120,
                        132,
                        158,
                        170,
                        182,
                        194,
                        206,
                        219,
                        234
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        139,
                        146,
                        242,
                        250
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAIIASYBBBUffHUxG0EAHTEZFEQxGESCAgQCvs4RBKi1XrQ2GgCOAgAJADIAMRkUMRgUEEM2GgFJIlkjCEsBFRJEVwIAgAdIZWxsbywgTFBJFRZXBgJMUChMULAlQzYaAUkiWSMITBUSRDYaAkkiWSMITBUSRDYaA0kiWSMITBUSRDYaBBUkEkQ2GgUVJBJENhoGSSJZIwhMFRJENhoHSSJZIwhMFRJENhoISSJZIwhMFRJENhoJSSJZIwhMFRJENhoKSSJZIwhMFRJENhoLSSJZIwhLARUSRFcCADYaDEkiWSMITBUSRDYaDUkVJBJEFzYaDhUkEkQ2Gg9XEiA2Gg9XMiA2Gg9JgVJZSwGBVFlSVwIANhoPSYFUWUsBgV5ZUlcCALGADEVWRU5UX1RJQ0tFVLIFTwWyJ0sCsixLArIrTwOyKk8CsimyJrIlIrIkIrIjsiKBA7IQIrIBs7Q8FihMULAlQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}